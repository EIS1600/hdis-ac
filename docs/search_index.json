[["index.html", "HDIS: Computational Analysis of Data from Audition Statements–with R Preface", " HDIS: Computational Analysis of Data from Audition Statements–with R Maxim G. Romanov 2023-10-20 Preface This is a Handbook for Digital Islamicate Studies. Work in progress, based on tought courses. The current course, “Computational Analysis of Data from Audition Statements–with R”, aims to introduce students to the main methods of data analysis that would be suitable for historical data. Students will learn the basics of the programming language R, which is one of the top choices in the field of Digital Humanities and Digital History. By the end of the course, students will understand how to work with data and how to extract the most valuable insights from it (exploratory data analysis). Students will practice on a dataset created from audition statements from medieval Damascus, thus also gaining original insights into the social history of medieval Islamic learning. There are no prerequisites for this course, except the basic knowledge of Arabic, since the data from audition statements is in Arabic. The course is complimentary to 57-521, where students will be learning how to read the original handwritten audition statements. "],["about-the-course.html", "About the Course", " About the Course The course, “Computational Analysis of Data from Audition Statements–with R”, aims to introduce students to the main methods of data analysis that would be suitable for historical data. Students will learn the basics of the programming language R, which is one of the top choices in the field of Digital Humanities and Digital History. By the end of the course, students will understand how to work with data and how to extract the most valuable insights from it (exploratory data analysis). Students will practice on a dataset created from audition statements from medieval Damascus, thus also gaining original insights into the social history of medieval Islamic learning. There are no prerequisites for this course, except the basic knowledge of Arabic, since the data from audition statements is in Arabic. The course is complimentary to 57-521, where students will be learning how to read the original handwritten audition statements. "],["syllabus.html", "Syllabus", " Syllabus Full nomenclature: [UHH AAI WiSe 23/24] 57-525 ONLINE: Computational Analysis of Data from Audition Statements (Complimentary to 57-521) Language of instruction: English Hours per week: 2 Credits: 6.0 Meeting time: Fr 16:00-18:00 Additional meeting time: we will need to find a time slot when you can all join and work on your HW assignments together Meeting place: for convenience, all meetings will be held online via Zoom Meeting link: shared via Slack; other details are available via STiNE Office hours: tbd (on Zoom); if you have any questions, please, post them on Slack Instructor: Dr. Maxim Romanov, maxim.romanov@uni-hamburg.de General Description The course aims to introduce students to the main methods of data analysis that would be suitable for historical data. Students will learn the basics of the programming language R, which is one of the top choices in the field of Digital Humanities and Digital History. By the end of the course, students will understand how to work with data and how to extract the most valuable insights from it (exploratory data analysis). Students will practice on a dataset created from audition statements from medieval Damascus, thus also gaining original insights into the social history of medieval Islamic learning. There are no prerequisites for this course, except the basic knowledge of Arabic, since the data from audition statements is in Arabic. The course is complimentary to 57-521, where students will be learning how to read the original handwritten audition statements. Personal computers are required both for in-class work and for your homework. Your computer must run a full version of either Windows, MacOS, or Linux; unfortunately, neither tablets nor Chrome-based laptops are suitable for this course. No prior programming experience is required, but familiarity with the command line and basic principles of programming will be beneficial. Learning objectives Get basic familiarity with the programming language R; Learn basic analytical techniques; Gain an understanding of working with data and modeling data; Practice these skills on a collection of historical data; Didactic concept This is a hands-on practical course, which requires regular attendance and completion of homework assignments. The participants of the course are encouraged to attend weekly “office hours”, where they can work on their homework assignments and get immediate feedback from the instructor. The main didactic approach of the course is to maximize the engagement of the participants with the programming language: this will provide a level of confidence and comfort in dealing with admittedly an alien subject within the scope of African and Asian studies; attaining this level of comfort is the key to absorbing the necessary theoretical, conceptual, and practical knowledge. Upon the completion of assigned tasks, the students are encouraged to bring their own datasets, since the engagement with their own data will provide a better grounding in this new subject. Literature All the necessary study materials will be provided. Below you can find a list of additional materials. Course Evaluation: requirements for the full credit mandatory attendance and participation; timely homework assignments; final project (computational analysis + analytical commentary); no examination; Final projects can be prepared either individually or in groups. Class Participation Each class session will consist in large part of practical hands-on exercises led by the instructor. Personal computers are required. We can accommodate whatever operating system you use (Windows, Mac, Linux), but it should be a full computer/laptop, not a tablet that uses an “incomplete” version of any major operating system. Don’t forget that asking for help counts as participation! Homework Just as in research and real life, collaboration is a very good way to learn and is therefore encouraged. If you need help with any assignment, you are welcome to ask a fellow student. If you do work together on homework assignments, then when you submit it please include a brief note (just a sentence or two) to indicate who did what. NB: On submitting homework, see below. Final Project Final project will be discussed later. You will have an option to build on what we will be doing in class, but you are most encouraged to pick a topic of your own. The best option will be to work on something relevant to your field of study, your term paper or your thesis. Additional Study Materials Arnold, Taylor, and Lauren Tilton. Humanities Data in R. New York, NY: Springer Science+Business Media, 2015 (shared via Slack) Healy, Kieran. Data Visualization: A Practical Guide. Princeton University Press, 2018. ISBN: 978-0691181622. http://socviz.co/ Hadley Wickham &amp; Garrett Grolemund, R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. O’Reilly, 2017. ISBN: 978-1491910399. https://r4ds.had.co.nz/ Wickham, Hadley. Advanced R, Second Edition. 2 edition. Boca Raton: Chapman and Hall/CRC, 2019. http://adv-r.had.co.nz/ Also check https://bookdown.org/ for more books on R Coding Club R Tutorials (focus on Ecology and Environmental Sciences), https://ourcodingclub.github.io/tutorials.html NB: By the way, this website is also built with R. Check: Yihui Xie. bookdown: Authoring Books and Technical Documents with R Markdown, 2022 https://bookdown.org/yihui/bookdown/ Software, Tools, &amp; Technologies: The following is the list of software, applications and packages that we will be using in the course. Make sure to have them installed by the class when we are supposed to use them. The main tools for the course will be the programming language R and RStudio, the premier integrated development environment for R. R: https://cloud.r-project.org/ (choose the version for your operating system!) RStudio: https://rstudio.com/products/rstudio/download/ (RStudio Desktop, Open Source License — the free version) We will also use a variety of packages for R, which we will be installing when necessary. Submitting Homework: Homework assignments are to be submitted by the beginning of the next class; For the first few classes you must email them to the instructor (as attachments) In the subject of your email, please, use the following format: CourseAPPREVIATION-LessonID-HW-Lastname-matriculationNumber, for example, if I were to submit homework for the first lesson, my subject header would look like: CADAS-L01-HW-Romanov-12435687. DH is a collaborative field, so you are most welcome to work on your homework assignments in groups, however, you must still submit it. That is, if a groups of three works on one assignment, there must be three separate submissions: either emailed from each member’s email and published at each member’s github page. Schedule Location: Online 01 Fri, 20. Oct. 2023 16:00-18:00 02 Fri, 27. Oct. 2023 16:00-18:00 03 Fri, 03. Nov. 2023 16:00-18:00 04 Fri, 10. Nov. 2023 16:00-18:00 05 Fri, 17. Nov. 2023 16:00-18:00 06 Fri, 24. Nov. 2023 16:00-18:00 07 Fri, 01. Dec. 2023 16:00-18:00 08 Fri, 08. Dec. 2023 16:00-18:00 09 Fri, 16. Dec. 2023 16:00-18:00 10 Fri, 22. Dec. 2023 16:00-18:00 11 Fri, 12. Jan. 2024 16:00-18:00 12 Fri, 19. Jan. 2024 16:00-18:00 13 Fri, 26. Jan. 2024 16:00-18:00 14 Fri, 02. Feb. 2024 16:00-18:00 Lesson Topics (subject to modifications) [ #01 ] Introduction; Syllabus; Setting Everything Up; [ #02 ] Part I—Basics: RStudio, Basic R Commands, Swirl Tutorials [ #03 ] Part I—Basics: R Markdown and R Notebooks [ #04 ] Part I—Basics: Control Flow; Regular Expressions; [ #05 ] Part I—Basics: Data Manipulations; [ #06 ] Part I—Basics: Visualizations with plot() and ggplot(); [ #07 ] Part I—Basics: Tidying Data; [ #08 ] Part II—Analyses: Audition Statement Data; [ #09 ] Part II—Analyses: Audition Statement Data; [ #10 ] Part II—Analyses: Audition Statement Data; [ #11 ] Part II—Analyses: Audition Statement Data; [ #12 ] Part II—Analyses: Audition Statement Data; [ #13 ] Part II—Analyses: Audition Statement Data; [ #14 ] Part II—Analyses: Audition Statement Data; "],["class-01.-setting-everything-up.html", "CHAPTER 1 Class 01. Setting Everything Up", " CHAPTER 1 Class 01. Setting Everything Up [subject to updates and corrections] "],["links-for-things-to-install.html", "1.1 Links for things to install", " 1.1 Links for things to install https://cloud.r-project.org/ :: R is the programming language that we will be using; https://posit.co/downloads/ :: RStudio is an integrated development environment (IDE) for R (In other words, a convenient interface that makes it easier to code in R.) https://learnr-examples.shinyapps.io/ex-setup-r/ :: an interactive tutorial on how to install everything, with useful additional explanations. "],["setting-things-up.html", "1.2 Setting Things Up", " 1.2 Setting Things Up Important, like really-super-duper-important!!!: We will need to set everything up so that it is much easier during the course. Creating folders and subfolders it is crucially important that you create them the exact way it is described below: 1) use only small letters; 2) instead of spaces between words, use “_” (underscore). It is important that you set things up exactly like that. If you make mistakes in naming folders correctly, code that we will be using will most likely not work, because it will not be able to find files that it needs to load and/or save. Setting up our main folder: CADAS-R Create that folder in “Documents” (one of the default folders both on Mac and Windows); or anywhere else—ideally where you keep all your other folders related to other courses that you are taking; just remember where you create it; In your folder then create the following structure: CADAS-R/ ├── downloads/ ├── data/ │ ├── raw_data/ │ └── processed_pata/ ├── literature/ │ ├── articles/ │ └── books/ ├── classes/ │ ├── class_01/ │ ├── class_02/ │ └── class_03/ ├── pPresentations/ └── meeting_notes/ /downloads/ here we will store all the course-related files that you will be downloading; /data/ here we will keep files with our data; we will not really need /raw_data/ and /processed_data/, but, usually, in your own future projects you may want to have such a division, to keep the original data in one folder and data that you have processed (cleaned, updated, etc.) in a different folder; /literature/ This is a way to organize readings, relevant to your project; we will keep here relevant files; Using bibliography managers, like Zotero, is a better option though; Download the following books, and place them in your folder (these are mainly for your reference): https://www.dropbox.com/s/n1vp6ix87js0j5k/ArnoldHumanities2015.pdf?dl=0 https://www.dropbox.com/s/zfryoznbkogqssg/HadleyAdvanced2014.pdf?dl=0 https://www.dropbox.com/s/kh18de2cym65gfi/HadleyGgplot22016.pdf?dl=0 Note, how the names of PDFs are following the same pattern: AuthorTitleYEAR.pdf. /classes/ here we will be placing files relevant to specific classes; mainly, these folders will keep the scripts that you will be working on; /presentations/ A folder for your final presentation/project; /meeting_notes/ You may want to store your notes separately; "],["creating-a-project.html", "1.3 Creating a Project", " 1.3 Creating a Project now that you have created everything, you need to create what is called a “Project” in RStudio. This will create a single file, which you can open in order to load all the necessary settings relevant to our course. using “Projects” will help you to keep different research tasks separately and, most importantly, keep all the files relevant to specific tasks well-organized. So, how to create a project? open RStudio, then, in the main menu, choose: File &gt; New Project (you should then see “New Project Wizard”, as shown below); Select “Existing Directory” &gt; then click on “Browse”, and then select the folder “CADAS-R”, which you created in the first step; click “Create Project” to complete the process. Now, what will happen is that in the tab “Files” in the lower right part of RStudio you will see the contents of the folder “CADAS-R”. There will also be a new file, called CADAS-R.Rproj. Later on, you will be able to quickly open your project by double-clicking on that file. When you open the project, R automatically sets the working directory (setwd()) to the folder of the project and many things just become much easier. Now, you can add and create new files relevant to your project in the folder “CADAS-R” and they will be easy to find directly from RStudio, using its “Files” Tab, which is usually available in the lower right corner. Suggestion: you will benefit greatly from keeping some order in your project folder. For example, keep all the files that you download in a subfolder “downloads”; your your data files in a subfolder “data”, and so on. "],["homework-assignments.html", "1.4 Homework assignments", " 1.4 Homework assignments Homework (Links will take you to tutorials): http://programminghistorian.org/ is a great resource for learning the basics of practical digital humanities. I encourage you to browse the lessons carefully, just to get a sense of what you can learn to do: http://programminghistorian.org/en/lessons/. Please, read the following assigned lessons carefully. In some cases, it is well worth trying to repeat all the steps on your own computer. I will mark those. Data organization: understanding and applying basic principles of data organization will save you a lot of time in the future and will help you to keep your data well organized and easily accessible. James Baker, “Preserving Your Research Data,” Programming Historian 3 (2014), https://doi.org/10.46430/phen0039. Command Line is the most foundational tool for anyone interested in doing anything remotely interesting with computers. Unlike graphical-user-interfaces (GIU), here you give commands to the computer by typing them in directly. You will need one of the following two tutorials, depending on whether you use Mac or Windows. You should try to repeat at least some of the commands given in tutorials. These tutorials are a little bit more detailed than what you will need for now; the most important thing for you to understand is how to navigate your computer (i.s., move from one folder to another), copy and move files, create folders, etc. Mac. Ian Milligan and James Baker, “Introduction to the Bash Command Line,” Programming Historian 3 (2014), https://doi.org/10.46430/phen0037 Windows. Ted Dawson, “Introduction to the Windows Command Line with PowerShell,” Programming Historian 5 (2016), https://doi.org/10.46430/phen0054 "],["class-02.html", "CHAPTER 2 Class 02", " CHAPTER 2 Class 02 [subject to updates and corrections] "],["class-03.html", "CHAPTER 3 Class 03", " CHAPTER 3 Class 03 [subject to updates and corrections] "],["class-...html", "CHAPTER 4 Class ..", " CHAPTER 4 Class .. [subject to updates and corrections] "],["class-..-1.html", "CHAPTER 5 Class ..", " CHAPTER 5 Class .. [subject to updates and corrections] "],["class-..-2.html", "CHAPTER 6 Class ..", " CHAPTER 6 Class .. [subject to updates and corrections] "],["class-..-3.html", "CHAPTER 7 Class ..", " CHAPTER 7 Class .. [subject to updates and corrections] "],["class-..-4.html", "CHAPTER 8 Class ..", " CHAPTER 8 Class .. [subject to updates and corrections] "],["class-..-5.html", "CHAPTER 9 Class ..", " CHAPTER 9 Class .. [subject to updates and corrections] "],["class-..-6.html", "CHAPTER 10 Class ..", " CHAPTER 10 Class .. [subject to updates and corrections] "],["ItoR_00.html", "CHAPTER 11 Introduction to R", " CHAPTER 11 Introduction to R [in progress] This chapter offers a general introduction to R. General Introduction Basics I: Data Structures and Subsetting Basics II: Data Manipulation &amp; Exloratory Analysis Basics III: Data Visualization; Functions "],["r-installation.html", "11.1 R Installation", " 11.1 R Installation Install R and R Studio and start working with them R https://www.r-project.org/ R Studio https://www.rstudio.com/ If you prefer video instructions, you can try “How to download and install R and RStudio” on YouTube. Possible Issues: Both R and RStudio may refuse to install if your computer and operating system is too old. For example, in late 2022, this was an attested problem with a MacBook Air 2015 with the MacOS High Sierra 10.13.6. Possible Solutions: you should try to update your operating system. This, however, might be not possible if your hardware does not support newer operating systems. you can try to install older versions of both R and Rstudio, but you must be prepared to face problems every step of the way later on. Not the ideal solution. well, if nothing works, you may have to bite the bullet and get a new computer. "],["using-projects.html", "11.2 Using “Projects”", " 11.2 Using “Projects” Projects are a very convenient feature of RStudio. The idea is very simple—Rstudio ties all settings to a specific folder, which makes it much easier to work with files kept in the same folder. How to use projects? create a folder somewhere on your computer; let’s call that folder “My_First_R_Project”, for further reference; move files that you are going to work with into that folder; open RStudio, then, in the main menu, choose: File &gt; New Project (you should then see “New Project Wizard”, as shown below); Select “Existing Directory” &gt; then click on “Browse”, and then select the folder “My_First_R_Project”, which you created in the first step; click “Create Project” to complete the process. Now, what will happen is that in the tab “Files” in the lower right part of RStudio you will see the contents of the folder “My_First_R_Project”. There will also be a new file, called “My_First_R_Project.Rproj”. Later on, you will be able to quickly open your project by double-clicking on that file. When you open te project, R automatically sets the working directory (setwd()) to the folder of the project and many things just become much easier. Now, you can add and create new files relevant to your project in the folder “My_First_R_Project” and they will be easy to find directly from RStudio, using its “Files” Tab, which is usually available in the lower right corner. Suggestion: you will benefit greatly from keeping some order in your project folder. For example, keep all you data files in a subfolder “data”; your images in a subfolder “images”, and so on. "],["general-introduction.html", "11.3 General Introduction", " 11.3 General Introduction 11.3.1 Goals 11.3.2 Class R Studio Interface four-partite division Creating a project create some folder where you are going to keep everything related to te course; create a project, pointing to that folder; Installing libraries (packages) install.packages(\"nameOfLibrary\") R Notebook elements: combining prose and code Converting R Notebook into different formats 11.3.2.1 Installing rmarkdown Instructions here: https://bookdown.org/yihui/rmarkdown/installation.html More information on R Markdown: https://rmarkdown.rstudio.com/lesson-1.html https://bookdown.org/yihui/rmarkdown/ 11.3.3 Starting with our first workbook: Now, download two worksheet files: 00_worksheets_basics_of_rmarkdown.zip 01_worksheets_familiar-with-r_NEW.zip Unzip them and open in RStudio. Let’s work through it! NB: Original worksheets prepared by Lincoln Mullen, GMU (https://dh-r.lincolnmullen.com/worksheets.html) 11.3.4 Topics covered 00_worksheets_basics_of_rmarkdown.zip basics of R markdown; 01_worksheets_familiar-with-r_NEW.zip Values Variables Vectors Built-in functions Using the documentation Data frames Installing and loading packages Simple plots 11.3.5 Reference materials Two main books on R markdown: https://bookdown.org/yihui/rmarkdown/; https://bookdown.org/yihui/rmarkdown-cookbook/; R Primer (https://dh-r.lincolnmullen.com/primer.html) in: Lincoln A. Mullen, Computational Historical Thinking: With Applications in R (2018–): https://dh-r.lincolnmullen.com. Use the this primer as a quick introduction to the R language, or as a reference for the rest of the course. The original worksheets have been developed by Lincoln Mullen (https://dh-r.lincolnmullen.com/worksheets.html). The ones used in this class might have undergone some changes and relevant adaptations. Your R installation may ‘speak’ your main language. It is nice on one hand, but can be quite inconvenient in class, where the main language is English. You may have to do cast some spells to switch R into English. Possible solutions can be found here: https://stackoverflow.com/questions/13575180/how-to-change-language-settings-in-r/ 11.3.6 Homework Complete the worksheet Getting familiar with R. Generate the results into HTML or PDF (PDF is a little bit trickier). Start working through the first assigned course in DataCamp (two weeks to complete; requires about 4 hours) Submit your homework as described below. 11.3.7 Common issues with homework 11.3.7.1 Tracing errors Errors happen all the time. You will run into errors when you run your code. You will run into error messages when “knitting” your document — as a result, your document will not be generated. To resolve this: It is important to run each chunk of code separately to ensure that they all work. If any of the chunks throw errors, you will not be able to “knit” your documents. When you run into an error, R Markdown panel (usually in the lower left corner of RStudio interface) will tell you in which line the error occurred. You will need to fix it the same way you would in Step 1. 11.3.7.2 Comments / Commenting out You do not want to constantly keep [re]installing libraries. So, if a library is already installed, you can “comment out” that line. install.packages(&quot;gapminder&quot;) install.packages(&quot;tidyverse&quot;) For example, the code chunk above should become: #install.packages(&quot;gapminder&quot;) #install.packages(&quot;tidyverse&quot;) Adding # in front of a line (or a section of a line) turns it into a comment and it will not longer be executed. 11.3.7.3 Random errors: Think about the following two lines of code. Any issues that you can explain? (You might want to run these lines in R to get some clues) `?median` variable1 &lt;- DigitalHumanities 11.3.8 Submitting homework Homework assignment must be submitted by the beginning of the next class; Email your homework to the instructor as attachments. In the subject of your email, please, add the following: 57528-LXX-HW-YourLastName-YourMatriculationNumber, where LXX is the number of the lesson for which you submit homework; YourLastName is your last name; and YourMatriculationNumber is your matriculation number. "],["glossary-of-computer-terms.html", "Glossary of Computer Terms", " Glossary of Computer Terms NB: The idea is to create a detailed glossary in multiple languages to facilitate understanding. Languages: English, German, Arabic, Persian, Turkish, etc. Entries may be supplied by illustration for more efficiency and clarity. "],["general-computer-terms.html", "11.4 General Computer Terms", " 11.4 General Computer Terms file manager command line path folder file "],["nlp-and-linguistics.html", "11.5 NLP and Linguistics", " 11.5 NLP and Linguistics natural language processing ngram token corpus linguistics computational linguistics "],["machine-learning.html", "11.6 Machine Learning", " 11.6 Machine Learning machine learning deep learning optical character recognition (OCR) handwritten tet recognition (HTR) training a model artificial intelligence "],["appendices.html", "Appendices", " Appendices … "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
